<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright 2019 W.I.S.V. 'Christiaan Huygens'
  Copyright 2018 The MITRE Corporation
     and the MIT Internet Trust Consortium

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd
                           http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
                           http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
                           http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-4.3.xsd">

    <import resource="wisvch-ldap.xml"/>
    <import resource="wisvch-saml.xml"/>

    <context:property-placeholder location="file:${spring.config.location}"/>

    <bean id="chUserDetailsService" class="ch.wisv.connect.services.CHUserDetailsService"/>

    <bean id="chAuthenticationProvider" class="ch.wisv.connect.authentication.CHAuthenticationProvider"/>

    <bean id="delegateLdapAuthenticationProvider"
          class="ch.wisv.connect.authentication.DelegateFilterAuthenticationProvider"
          c:delegate-ref="ldapAuthenticationProvider" c:filter-ref="chAuthenticationProvider"/>
    <bean id="delegateSamlAuthenticationProvider"
          class="ch.wisv.connect.authentication.DelegateFilterAuthenticationProvider"
          c:delegate-ref="samlAuthenticationProvider" c:filter-ref="chAuthenticationProvider"/>

    <bean id="chUserInfoRepository" primary="true" class="ch.wisv.connect.services.CHUserInfoRepository"/>
    <bean id="chOidcTokenService" primary="true" class="ch.wisv.connect.services.CHOIDCTokenService"/>

    <bean id="chScopeClaimTranslationService" primary="true"
          class="ch.wisv.connect.services.CHScopeClaimTranslationService"/>

    <bean id="authenticationFailureHandler"
          class="ch.wisv.connect.authentication.ExceptionMappingAuthenticationFailureHandler">
        <property name="exceptionMappings">
            <map>
                <entry key="ch.wisv.connect.services.CHUserDetailsService$CHInvalidMemberException"
                       value="/login?error=failure&amp;chMemberError=invalid"/>
                <entry key="ch.wisv.connect.services.CHUserDetailsService$CHMemberConflictException"
                       value="/login?error=failure&amp;chMemberError=conflict"/>
            </map>
        </property>
        <property name="defaultFailureUrl" value="/login?error=failure"/>
    </bean>

    <security:authentication-manager id="authenticationManager">
        <security:authentication-provider ref="delegateLdapAuthenticationProvider"/>
        <security:authentication-provider ref="delegateSamlAuthenticationProvider"/>
    </security:authentication-manager>

    <mvc:view-controller path="/login" view-name="login"/>
    <mvc:redirect-view-controller path="/saml2/login" redirect-url="/saml/login?idp=${saml2.idp_entity_id}"/>
    <mvc:view-controller path="/error" view-name="error"/>

    <security:http authentication-manager-ref="authenticationManager">
        <security:intercept-url pattern="/authorize" access="hasRole('ROLE_USER')"/>
        <security:intercept-url pattern="/**" access="permitAll"/>
        <security:form-login login-page="/login"
                             login-processing-url="/ldap/login"
                             default-target-url="/"
                             always-use-default-target="true"
                             authentication-failure-handler-ref="authenticationFailureHandler"
                             authentication-success-handler-ref="authenticationTimeStamper"/>
        <security:custom-filter ref="authRequestFilter" after="SECURITY_CONTEXT_FILTER"/>
        <security:logout logout-url="/logout" logout-success-url="/login?logout"/>
        <security:anonymous/>
        <security:expression-handler ref="oauthWebExpressionHandler"/>
        <security:headers>
            <security:frame-options policy="DENY"/>
        </security:headers>
        <security:csrf/>
    </security:http>

    <bean id="dienst2RestTemplate" class="ch.wisv.dienst2.apiclient.util.Dienst2RestTemplateFactoryBean"
          c:apiToken="${dienst2.apitoken}"/>
    <bean class="ch.wisv.dienst2.apiclient.util.Dienst2Repository" c:baseUrl="${dienst2.baseurl}"
          c:restTemplate-ref="dienst2RestTemplate"/>

    <cache:annotation-driven/>

    <bean id="cacheManager" class="org.springframework.cache.caffeine.CaffeineCacheManager">
        <property name="caffeineSpec">
            <bean class="com.github.benmanes.caffeine.cache.CaffeineSpec" factory-method="parse"
                  c:specification="maximumSize=1000,expireAfterWrite=600s"/>
        </property>
    </bean>
</beans>
